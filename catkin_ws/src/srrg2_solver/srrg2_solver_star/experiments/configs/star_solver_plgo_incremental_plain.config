"RobustifierPolicyByType" { 
  "#id" : 1, 

  // name of the class of the matching factor
  "factor_class_name" : "SE3PosePointOmniBAErrorFactor", 

  // robustifier matching the rule
  "robustifier" : { 
    "#pointer" : 2
   }
 }

"FactorGraphVisitPolicyByType" { 
  "#id" : 3, 

  // cost function to evaluate the edge cost
  "cost_function" : { 
    "#pointer" : 4
   }, 

  // factor class name
  "factor_classname" : "SE3PosePointOffsetErrorFactor", 

  // from var in factor, -1 means all
  "var_from_pos" : 0, 

  // to var in factor, -1 means all
  "var_to_pos" : 1
 }

"SimpleTerminationCriteria" { 
  "#id" : 5, 

  // ratio of decay of chi2 between iteration
  "epsilon" : 0.00100000005
 }

"FactorGraphVisitCostUniform" { 
  "#id" : 6, 

  // cost of traversing the factor
  "factor_cost" : 1
 }

"FactorGraphVisitCostUniform" { 
  "#id" : 7, 

  // cost of traversing the factor
  "factor_cost" : 1
 }

"FactorGraphVisitCostUniform" { 
  "#id" : 4, 

  // cost of traversing the factor
  "factor_cost" : 1
 }

"FactorGraphVisitPolicyByType" { 
  "#id" : 8, 

  // cost function to evaluate the edge cost
  "cost_function" : { 
    "#pointer" : 9
   }, 

  // factor class name
  "factor_classname" : "SE3PosePointOmniBAErrorFactor", 

  // from var in factor, -1 means all
  "var_from_pos" : -1, 

  // to var in factor, -1 means all
  "var_to_pos" : -1
 }

"IterationAlgorithmDDL" { 
  "#id" : 10, 

  // initial radius of the trust region [default: 1e4]
  "initial_radius" : 10000, 

  // Increase factor of the damping in the GN step
  "lambda_factor" : 10, 

  // max iterations of the algorithm[default: 20]
  "max_iterations" : 20, 

  // Maximum value for the damping of the GN step
  "max_lambda" : 1, 

  // max value of the chi ratio to decrease the radius of the trust region
  "max_ratio_down" : 0.25, 

  // Minimum diagonal value for the H to compute the trust region scales
  "min_diag" : 9.99999997e-07, 

  // Minimum value for the damping of the GN step
  "min_lambda" : 9.99999994e-09, 

  // min value of the chi ratio to increase the radius of the trust region
  "min_ratio_up" : 0.75
 }

"FactorGraphVisitCostUniform" { 
  "#id" : 9, 

  // cost of traversing the factor
  "factor_cost" : 1
 }

"FactorGraphVisitPolicyByType" { 
  "#id" : 11, 

  // cost function to evaluate the edge cost
  "cost_function" : { 
    "#pointer" : 6
   }, 

  // factor class name
  "factor_classname" : "SE3PosePoseGeodesicErrorFactor", 

  // from var in factor, -1 means all
  "var_from_pos" : -1, 

  // to var in factor, -1 means all
  "var_to_pos" : -1
 }

"Solver" { 
  "#id" : 12, 

  // pointer to the optimization algorithm (GN/LM or others)
  "algorithm" : { 
    "#pointer" : 10
   }, 

  // pointer to linear solver used to compute Hx=b
  "linear_solver" : { 
    "#pointer" : 13
   }, 
  "max_iterations" : [ 10 ], 

  // Minimum mean square error variation to perform global optimization
  "mse_threshold" : -1, 
  "robustifier_policies" : [ { 
  "#pointer" : 1
 } ], 

  // term criteria ptr, if 0 solver will do max iterations
  "termination_criteria" : { 
    "#pointer" : 5
   }, 

  // turn it off to make the world a better place
  "verbose" : 0
 }

"FactorGraphVisit" { 
  "#id" : 14, 
  "name" : "bf_visit", 
  "cost_policies" : [ { 
  "#pointer" : 11
 }, { 
  "#pointer" : 8
 }, { 
  "#pointer" : 3
 }, { 
  "#pointer" : 15
 }, { 
  "#pointer" : 16
 } ], 

  // maximum cost when to stop the expansion
  "max_cost" : 10
 }

"RobustifierCauchy" { 
  "#id" : 2, 

  // threshold of chi after which the kernel is active
  "chi_threshold" : 10
 }

"FactorGraphVisitCostUniform" { 
  "#id" : 17, 

  // cost of traversing the factor
  "factor_cost" : 1
 }

"FactorGraphVisitPolicyByType" { 
  "#id" : 15, 

  // cost function to evaluate the edge cost
  "cost_function" : { 
    "#pointer" : 17
   }, 

  // factor class name
  "factor_classname" : "SE3PosePointOffsetErrorFactor", 

  // from var in factor, -1 means all
  "var_from_pos" : 1, 

  // to var in factor, -1 means all
  "var_to_pos" : 0
 }

"FactorGraphVisitPolicyByType" { 
  "#id" : 16, 

  // cost function to evaluate the edge cost
  "cost_function" : { 
    "#pointer" : 7
   }, 

  // factor class name
  "factor_classname" : "SE3PosePointOmniBAErrorFactor", 

  // from var in factor, -1 means all
  "var_from_pos" : 1, 

  // to var in factor, -1 means all
  "var_to_pos" : 0
 }

"SolverIncremental" { 
  "#id" : 18, 
  "name" : "star_solver", 

  // class name of the variable that can become a gauge
  "gauge_type" : "VariableSE3QuaternionRightAD", 

  // solver used for optimizing the whole graph
  "global_solver" : { 
    "#pointer" : 12
   }, 

  // number of steps between global optimizations
  "global_step" : 1, 

  // solver used for optimizing the local portion
  "local_solver" : { 
    "#pointer" : 12
   }, 

  // visit to use for determining the surrounding
  "surrounding_visit" : { 
    "#pointer" : 14
   }
 }

"SparseBlockLinearSolverCholeskyCSparse" { 
  "#id" : 13
 }

